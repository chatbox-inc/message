# Example YAML to get you started quickly.
# Be aware that YAML has indentation based scoping.
# Code completion support is available so start typing for available options.
swagger: '2.0'
# This is your document metadata
info:
  version: "0.0.1"
  title: Message API
  description: Message API
host: localhost:8000
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /
produces:
  - "application/json; charset=utf-8"
  - application/json
parameters:
  uid:
    name: uid
    in: path
    description: メッセージID
    type: string
    required: true
  message:
    name: message
    in: body
    description: メッセージID
    type: object
    required: true
    properties:
      message:
        type: object
        properties:
          from:
            type: string
          to:
            type: string
          subject:
            type: string
          body:
            type: object

# Describe your paths here
paths:
  /message:
    post:
      description: メッセージを投稿します。
      operationId: postMessage
      tags:
       - message
      parameters:
        - $ref: '#/parameters/message'
      responses:
        200:
          description: Successful response
          schema:
            title: Result
            type: object
            properties:
              message:
                $ref: '#/definitions/Message'
  # This is a path endpoint. Change it.
  /message/{uid}:
    get:
      description: メッセージを取得します。
      operationId: getMessage
      tags:
       - message
      parameters:
        - $ref: '#/parameters/uid'
      responses:
        200:
          description: Successful response
          schema:
            title: Result
            type: object
            properties:
              message:
                $ref: '#/definitions/Message'
    put:
      description: メッセージを更新します。
      operationId: putMessage
      tags:
       - message
      parameters:
        - $ref: '#/parameters/uid'
        - $ref: '#/parameters/message'
      responses:
        200:
          description: Successful response
          schema:
            title: Result
            type: object
            properties:
              message:
                $ref: '#/definitions/Message'
    delete:
      description: メッセージを削除します。
      operationId: deleteMessage
      tags:
       - message
      parameters:
        - $ref: '#/parameters/uid'
      responses:
        200:
          description: Successful response
          schema:
            title: Result
            type: object
            properties:
              message:
                $ref: '#/definitions/Uid'
definitions:
  Uid:
    type: string
  Message:
    type: object
    properties:
      from:
        type: string
      to:
        type: string
      body:
        type: string
